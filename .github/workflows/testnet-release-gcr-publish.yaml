name: Testnet Build and Publish Image to GCR #TODO: different name for mainnet

on:
  release:
    types: [published]
  
jobs:
  deploy:
    runs-on: ubuntu-latest
# ON RELEASE PUBLISHED
#TODO: mainnet '*-alpha-*' tag name convention && branch names mainnet and testnet
#     if: ${{ (contains(github.event.release.tag_name, '-rc-') && endsWith(github.event.release.target_commitish, 'workflows')) }}
    if: |
      contains(github.event.release.tag_name, '-rc-') &&
      github.event.release.target_commitish == 'testnet'
    steps:
      - uses: actions/checkout@v2
      
      - run: echo "release.target_commitish ${{ github.event.release.target_commitish }}"
      - run: echo "release.tag_name ${{ github.event.release.tag_name }}"
      - run: echo "üçè This job's status is ${{ job.status }}."
   

   
   
#       - name: Setup GCloud SDK
#         uses: google-github-actions/setup-gcloud@v0.2.0
#         with:
#           project_id: ${{ secrets.GCP_PROJECT }}
#           service_account_key: ${{ secrets.GCP_SA_KEY }}

#       - name: Authorize Docker
#         run: gcloud auth configure-docker

# TODO Testnet 

#       - name: Build and Push Container
#         run: |-
#           docker build \
#             -t gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:${GITHUB_REF/refs\/tags\//} \
#             -f build/Dockerfile .
#           docker push gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:${GITHUB_REF/refs\/tags\//}

# TODO Mainnet

#       - name: Build and Push Container
#         run: |-
#           docker build \
#             -t gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:${GITHUB_REF/refs\/tags\//} \
#             -t gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:latest \
#             -f build/Dockerfile .
#           docker push gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:${GITHUB_REF/refs\/tags\//}
#           docker push gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:latest
