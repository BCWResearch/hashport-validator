name: Testnet Build and Publish Image to GCR #TODO: different name for mainnet

# on:
#   release:
#     types: [published]
on: push

env:
  copy_logs_command: docker logs runner_validator_1 > logs-$(date +'%d-%m-%Y_%H:%M:%S').log

jobs:

  deploy:
    runs-on: ubuntu-latest
#     if: |
#       contains(github.event.release.tag_name, '-rc-') &&
#       github.event.release.target_commitish == 'test/workflows'
    steps:
      - uses: actions/checkout@v2

      - name: Setup GCloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_CE_KEY }}
      - name: Copy files
        run: gcloud compute scp --zone=${{ secrets.APP_TESTNET_DAVE_ZONE }} ./monitoring ${{ secrets.APP_TESTNET_DAVE_INSTANCE }}:~
          
#         run: |
#           gcloud compute scp --zone=${{ secrets.APP_TESTNET_DAVE_ZONE }} ./monitoring/alertmanager/email.html ${{ secrets.APP_TESTNET_DAVE_INSTANCE }}:~/monitoring/alertmanager && \
#           gcloud compute scp --zone=${{ secrets.APP_TESTNET_DAVE_ZONE }} ./monitoring/grafana/provisioning/dashboards/dashboards_provider.yml ${{ secrets.APP_TESTNET_DAVE_INSTANCE }}:~/monitoring/grafana/provisioning/dashboards && \
#           gcloud compute scp --zone=${{ secrets.APP_TESTNET_DAVE_ZONE }} ./monitoring/grafana/provisioning/datasources/datasources.yml ${{ secrets.APP_TESTNET_DAVE_INSTANCE }}:~/monitoring/grafana/provisioning/datasources
          

        
#       - name: Copy logs
#         run: gcloud compute ssh ${{ secrets.APP_TESTNET_DAVE_INSTANCE }} --zone=${{ secrets.APP_TESTNET_DAVE_ZONE }} --command="${{ env.copy_logs_command }}"

      - run: echo "release.target_commitish ${{ github.event.release.target_commitish }}"
      - run: echo "release.tag_name ${{ github.event.release.tag_name }}"
      - run: echo "üçè This job's status is ${{ job.status }}."
   

   
   
#       - name: Setup GCloud SDK
#         uses: google-github-actions/setup-gcloud@v0.2.0
#         with:
#           project_id: ${{ secrets.GCP_PROJECT }}
#           service_account_key: ${{ secrets.GCP_SA_KEY }}

#       - name: Authorize Docker
#         run: gcloud auth configure-docker

# TODO Testnet 

#       - name: Build and Push Container
#         run: |-
#           docker build \
#             -t gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:${GITHUB_REF/refs\/tags\//} \
#             -f build/Dockerfile .
#           docker push gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:${GITHUB_REF/refs\/tags\//}

# TODO Mainnet

#       - name: Build and Push Container
#         run: |-
#           docker build \
#             -t gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:${GITHUB_REF/refs\/tags\//} \
#             -t gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:latest \
#             -f build/Dockerfile .
#           docker push gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:${GITHUB_REF/refs\/tags\//}
#           docker push gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE }}:latest
